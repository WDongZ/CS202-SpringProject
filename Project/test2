.data
num1:.float 0.5
num2:.float 1.0
num3:.float -1.0
.text
#60(a),62(b)是输出LED,70是读入拨码开关,78是编码开关,64是七段数码管,74是确认按键
	addi s0,s0,0xFFFFFC74
	lb s1,0(s0)#s1 确认后开始进行test2
Loop:
	addi a1,zero,0
	addi t0,zero,0
	addi t1,zero,0
	addi a3,a3,0xFFFFFC78#a3是编号地址
	lw s4,0(a3)
	beq a3,s2,test000
	beq s4,s2,test001
	beq s4,s2,test010
	beq s4,s2,test011
	beq s4,s2,test100
	beq s4,s2,test101
	beq s4,s2,test110
	beq s4,s2,test111

test000:
	addi t0,zero,0xFFFFFC70#读入一个数
	addi a0,zero,0xFFFFFC64#输出
	lw s2,0(t0)#s2是读入的数

	addi a1,zero,0#计数器
	addi a2,zero,8
	addi t1,zero,0x80 # 8bits整数的最高位设置为1，其余位为0 
# 开始循环，检查每一位直到找到最高有效位  
counting:  
    # 检查当前位是否为1  
    and t2, s2, t1  # t2是按位与结果  
    beq t2,zero, check_next_bit  # 如果t2为0（当前位为0），则检查下一位
    # 如果当前位为1，则退出循环
    jal end
check_next_bit:  
    # 右移一位以检查下一位  
    srli t1, t1, 1  
    # 计数器+1  
    addi a1, a1, 1
    addi a2,a2,-1
    # 检查是否还有位数
    bgt t0,zero, counting
end:
	lb s2,0(a1)
	sb s2,0(a0)#七段数码管
	jal Loop

test001:
	addi t0,zero,0xFFFFFC70
	#读入一个数
	addi a0,zero,0xFFFFFC64#输出
	la t1,num2
	la s2,num3
	flw fa5,(t0)
	flw fa1,(t1)#1
	flw fs2,(s2)#-1

	addi a2,zero,1#初始化
	
ceil:
	addi a2,a2,1#计数
	fadd.s fa5,fa5,fs2
	fgt.s  a1,fa5,fa1
	beq a1,t4,ceil#等于1说明还要计数
	sw a2,0(a0)#七段数码管
	jal Loop

test010:
	addi t0,t0,0xFFFFFC70#读入一个数
	addi a0,a0,0xFFFFFC64#输出
	la t1,num2
	la s2,num3
	flw fa5,(t0)
	flw fa1,(t1)#1
	flw fs2,(s2)#-1
	
	addi a2,zero,0#初始化
	
floor:
	addi a2,a2,1#计数
	fadd.s fa5,fa5,fs2#fs2:-1
	fgt.s  a1,fa5,fa1
	beq a1,t4,floor#等于1说明还要计数
	sw a2,0(a0)#七段数码管
	jal Loop

test011:
	addi t0,t0,0xFFFFFC70#读入一个数
	addi a0,a0,0xFFFFFC64#输出
	la t1,num2
	la s2,num3
	flw fa5,(t0)
	flw fa1,(t1)
	flw fs2,(s2)
	addi a2,zero,0#初始化
discard:
	addi a2,a2,1#计数
	fadd.s fa5,fa5,fs2
	fgt.s  a1,fa5,fa1
	beq a1,t4,discard#等于1说明还要计数
	la t5,num1
	fld ft5,(t5)
	flt.s t6,fa5,ft5#四舍
	beq t6,zero,adding
adding:
	
	sw a2,0(a0)#七段数码管
	jal Loop

test100:
	addi a2,zero,0#初始化
	addi a3,zero,0
	addi t1,zero,1
	
inputA:
	addi s0,zero,0xFFFFFC74#s0按键地址
	lw s1,0(s0)#s1 确认键 确认后输入
	lw s4,0(s1)
	bne s4,t1,inputA
	addi t0,zero,0xFFFFFC70
	addi a0,zero,0xFFFFFC60

inputB:
	lb s2,0(t0)#a的值放入s2中
	addi s0,zero,0xFFFFFC74#s0确认键地址
#	lw s4,0(s1)
	bne s1,t1,inputB#s1确认键
	addi t1,zero,0xFFFFFC70
	addi a0,zero,0xFFFFFC62
	lb s3,0(t1)#b的值放入s3中

	add a2,s2,s3#a,b相加

	srli a3, a2, 8  
	# 如果进位不为0，则加到结果中  
	bne a3,zero, handle_overflow
	xori a0, a2, 0xFF#a0中为要输出结果  
	jal Loop
handle_overflow:
	addi a2,a2,1#加进位
	xori a0, a2, 0xFF#a0中为要输出结果  
	jal Loop

test101:
	addi a4,zero,0
	addi a5,zero,0
	addi s0,zero,0xFFFFFC74#s0按键地址
inputA101:
	lw s1,0(s0)#s1 确认键 确认后输入
#	lw s4,0(s1)
	bne s1,t1,inputA101
	addi t0,zero,0xFFFFFC70
	addi a0,zero,0xFFFFFC64
	lw s2,0(t0)
	lbu a4,0(s2)
	lbu a5,1(s2)
	slli a5,a5,8
	add a6,a5,a4
	sw a6,0(a0)
	jal Loop
	
test110:
	addi a5,zero,1#计数
	addi s0,zero,0xFFFFFC74#s0按键地址
inputA110:
	lw s1,0(s0)#s1 确认键 确认后输入
#	lw s4,0(s1)
	bne s1,t1,inputA110
	addi t0,zero,0xFFFFFC70#读入一个数
	addi a0,a0,0xFFFFFC64#输出
	lw s2,(t0)
 	add s2,zero,t0
 	addi a1,zero,1
 	addi a2,zero,1
 	bge a1,s2,marking
 	jal Fibonacci
 marking:
 	add a6,zero,a5
 	sw a6,(a0)
 	#add a0,zero,a1#a1是小于该数的max
 	jal Loop
 	
Fibonacci:
	addi sp,sp,-8
	addi a5,a5,2
 	sw a1,4(sp)
 	sw a2,0(sp)
	blt  a2,s2,loop
	addi sp,sp,8
	addi a5,a5,2
	jal marking

loop:
	addi sp,sp,-4
	addi a5,a5,1
	add a3,a1,a2
 	sw a3,0(sp)
 	lw a1,4(sp)
 	lw a2,0(sp)
 	addi sp,sp,4
 	addi a5,a5,1
 	jal Fibonacci
	
test111:
	addi a5,zero,1#计数
	addi s0,zero,0xFFFFFC74#s0按键地址
inputA111:
	lw s1,0(s0)#s1 确认键 确认后输入
#	lw s4,0(s1)
	bne s1,t1,inputA111
	addi t0,zero,0xFFFFFC70#读入一个数
	addi a0,a0,0xFFFFFC64#输出
	lw s2,(t0)
 	add s2,zero,t0
 	addi a1,zero,1
 	addi a2,zero,1
 	bge a1,s2,mark
 	jal Fib
 mark:
 	add a6,zero,a5
 	sw a6,(a0)
 	jal Loop
 	
Fib:
	addi sp,sp,-8
	addi a5,a5,2
 	sw a1,4(sp)
 	sw a2,0(sp)
 	sw a1,(a0)#输出
 	sw a2,(a0)#输出
	blt  a2,s2,LOOP
	addi sp,sp,8
	addi a5,a5,2
	jal mark

LOOP:
	addi sp,sp,-4
	addi a5,a5,1
	add a3,a1,a2
 	sw a3,0(sp)
 	sw a3,(a0)#输出
 	lw a1,4(sp)
 	lw a2,0(sp)
 	addi sp,sp,4
 	addi a5,a5,1
 	jal Fib


