#74（样例里确认键），78（结束样例），7c（确认选择样例）按键，拨码开关70（16位开关），七段数码管64，LED：60(a),62(b)
.data

.text
	addi t1,zero,1
Loop:
	addi s3,zero,0
	lw s4,0xfffffc70(x0)#拨码开关
	lw s5,0xfffffc7c(x0)#s5 确认后开始进行test
	bne s5,t1,Loop
	beq s4,s3,test000
	addi s3,s3,1
	beq s4,s3,test001
	addi s3,s3,1
	beq s4,s3,test010
	addi s3,s3,1
	beq s4,s3,test011
	addi s3,s3,1
	beq s4,s3,test100
	addi s3,s3,1
	beq s4,s3,test101
	addi s3,s3,1
	beq s4,s3,test110
	addi s3,s3,1
	beq s4,s3,test111
	jal exit

test000:
	addi t1,zero,1
	
inputA000:
	lw s1,0xfffffc74(x0)
	lw s2,0xfffffc70(x0)#读入一个数
	bne s1,t1,inputA000

	addi a1,zero,0#计数器
	addi a2,zero,7
	addi t5,zero,0x80 # 8bits整数的最高位设置为1，其余位为0 
# 开始循环，检查每一位直到找到最高有效位  
counting:  
    # 检查当前位是否为1  
    and t2, s2, t5  # t2是按位与结果  
    beq t2,zero, check_next_bit  # 如果t2为0（当前位为0），则检查下一位
    # 如果当前位为1，则退出循环
    jal end
check_next_bit:  
    # 右移一位以检查下一位  
    srli t5, t5, 1  
    # 计数器+1  
    addi a1, a1, 1
    addi a2,a2,-1
    # 检查是否还有位数
    #bgt s2,zero, counting
    bgt a2,zero, counting
end:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw a1,0xfffffc64(x0)#七段数码管
	bne s3,t1,end
	
	jal Loop

test001:
	addi t1,zero,1
	addi t2,zero,0
	addi t3,zero,0
	
inputA001:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#读入一个数s2
	bne s1,t1,inputA001
	
	srli a3,s2,10
	addi a3,a3,-15#exponent - bias
	andi a3,a3,31#消除负数影响
	andi s6,s2,0x3ff#取后十位
	xori s8,s6,0
	addi s6,s6,0x400#前面加1
	sll s6,s6,a3
	srli s6,s6,10
	
	srli a4,s2,15
	beq s8,zero,ceil2#=0
	beq a4,zero,ceil1#>0
	beq a4,t1,ceil2#<0

ceil1:
	addi s6,s6,1
output001:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,output001
	jal Loop
ceil2:
	sub s6,zero,s6
out001:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,out001
	jal Loop

test010:
	addi t1,zero,1
	addi t2,zero,0
	addi t3,zero,0
	
inputA010:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#读入一个数s2
	bne s1,t1,inputA010
	
	srli a3,s2,10
	addi a3,a3,-15#exponent - bias
	andi a3,a3,31#消除负数影响
	andi s6,s2,0x3ff#取后十位
	xori s8,s6,0
	addi s6,s6,0x400#前面加1
	sll s6,s6,a3
	srli s6,s6,10
	
	srli a4,s2,15
	beq s8,zero,floor1#=0
	beq a4,zero,floor1#>0
	beq a4,t1,floor2#<0

floor1:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,floor1
	jal Loop
floor2:
	addi s6,s6,1
	sub s6,zero,s6
output010:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,output010
	jal Loop

test011:
	addi t1,zero,1
	addi t2,zero,0
	addi t3,zero,0
	
inputA011:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#读入一个数s2
	bne s1,t1,inputA011
	
	srli a3,s2,10
	addi a3,a3,-15#exponent - bias
	andi a3,a3,31#消除负数影响
	andi s6,s2,0x3ff#取后十位
	xori s8,s6,0
	addi s6,s6,0x400#前面加1
	sll s6,s6,a3
	srli s6,s6,10
	srli a4,s2,15#前面正数还是负数
		
	addi a5,zero,0x200#0.5
	and a6,a5,s8
	beq a6,a5,discard1
	beq a6,zero,discard2

discard1:#五入
	addi s6,s6,1
	beq a4,t1,minus1
output011:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,output011
	jal Loop
minus1:
	sub s6,zero,s6
out011:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,out011
	jal Loop
	
discard2:#四舍
	beq a4,t1,minus2
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,discard2
	jal Loop
minus2:
	sub s6,zero,s6
out:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw s6,0xfffffc64(x0)
	bne s3,t1,out
	jal Loop
	
test100:
	addi a2,zero,0#初始化
	addi a3,zero,0
	
	addi t1,zero,1
	inputA100:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#a放s2
	bne s1,t1,inputA100
	
	inputB100:
	lw s1,0xfffffc7c(x0)#s1按键
	lw s3,0xfffffc70(x0)#b放s3
	bne s1,t1,inputB100

	add a2,s2,s3#a,b相加

	srli a3, a2, 8  
	# 如果进位不为0，则加到结果中  
	bne a3,zero, handle_overflow
	xori a0, a2, 0xFF#a0中为要输出结果
	
out100:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw a0,0xfffffc64(x0)
	bne s3,t1,out100
	jal Loop

handle_overflow:
	addi a2,a2,1#加进位
	xori a0, a2, 0x1FF
output100:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw a0,0xfffffc64(x0)
	bne s3,t1,output100  
	jal Loop
	
test101:
	addi a4,zero,0
	addi a5,zero,0
	addi t1,zero,1
inputA101:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)
	bne s1,t1,inputA101

	lbu a4,0(s2)#拨码开关读入数据
	lbu a5,1(s2)
	slli a4,a4,8
	add a6,a5,a4
	
output101:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	srli a6,a6,4
	sw a6,0xfffffc64(x0)
	bne s3,t1,output101
	
	jal Loop
	
test110:
	addi a5,zero,0#计数
	addi t1,zero,1
	addi s9,zero,2
inputA110:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#a放s2
	bne s1,t1,inputA110

 	addi a7,zero,0
LOOP1:
 	addi a7,a7,1
 	add a0,zero,a7
	jal Fibonacci
	blt a0,s2,LOOP1
output110:
	lw s3,0xfffffc78(x0)#七段数码管死循环
	sw a5,0xfffffc64(x0)
	bne s3,t1,output110
	
	jal Loop
	
Fibonacci:
	addi sp,sp,-8
	addi a5,a5,2
	sw ra,4(sp)
	sw a0,0(sp)
	
	bge a0,s9,fib
	
	addi a0,zero,1
	addi sp,sp,8
	addi a5,a5,2
	jr ra
	
fib:
	addi sp,sp,-8
	addi a5,a5,2
	addi a0,a0,-1
	jal Fibonacci
	sw a0,4(sp)
	lw a0,8(sp)
	addi a0,a0,-2
	jal Fibonacci
	sw a0,0(sp)
	lw t3,4(sp)
	lw t2,0(sp)
	lw a0,8(sp)
	lw ra,12(sp)
	addi sp,sp,16
	addi a5,a5,4
	add a0,t3,t2
	jr ra
	
	
test111:
	addi t1,zero,1
	addi s9,zero,2
	addi s7,zero,0#时间计数
	lui s6,0x50000
inputA111:
	lw s1,0xfffffc74(x0)#s1按键
	lw s2,0xfffffc70(x0)#a放s2
	bne s1,t1,inputA111

 	addi a7,zero,0
LOOP2:
	addi s7,zero,0
 	addi a7,a7,1
 	add a0,zero,a7
	jal Fib
	
	blt a0,s2,LOOP2
	
#output111:
#	lw s3,0xfffffc78(x0)#七段数码管死循环
#	sw a5,0xfffffc64(x0)
#	bne s3,t1,output111
	jal Loop
	
Fib:
	addi sp,sp,-8
	sw ra,4(sp)
	sw a0,0(sp)
circulate1:
	sw a0,0xfffffc64(x0)
	addi s7,s7,1
	blt s7,s6,circulate1
	
	bge a0,s9,fibonacci
	
	addi a0,zero,1
	addi sp,sp,8
	jr ra
	
fibonacci:
	addi sp,sp,-8
	addi a0,a0,-1
	jal Fib
	addi s7,zero,0
	sw a0,4(sp)
circulate2:
	sw a0,0xfffffc64(x0)
	addi s7,s7,1
	blt s7,s6,circulate2
	
	lw a0,8(sp)
	addi a0,a0,-2
	jal Fib
	addi s7,zero,0
	sw a0,0(sp)
circulate3:
	sw a0,0xfffffc64(x0)
	addi s7,s7,1
	blt s7,s6,circulate3
	lw t3,4(sp)
	lw t2,0(sp)
	lw a0,8(sp)
	lw ra,12(sp)
	addi sp,sp,16
	add a0,t3,t2
	jr ra
 	
exit:
